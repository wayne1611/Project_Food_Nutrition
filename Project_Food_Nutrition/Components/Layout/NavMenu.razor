@implements IDisposable
@inject NavigationManager NavigationManager

<!-- Top Navigation Bar -->
<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container-fluid">
        <!-- Brand Name -->
        <a class="navbar-brand me-auto" href="#">Project_Food_Nutrition</a>

        <!-- Toggler Button for Small Screens -->
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <!-- Navigation Links -->
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ms-auto align-items-center">
                <li class="nav-item">
                    <NavLink class="nav-link active" href="" Match="NavLinkMatch.All">
                        <span class="bi bi-house-door-fill"></span> Home
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="caloriess">
                        <span class="bi bi-plus-square-fill"></span> Calories
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="Macros">
                        <span class="bi bi-list-nested"></span> Macros
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="MacrosTracking">
                        <span class="bi bi-clipboard-check"></span> Tracking
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="recipe">
                        <span class="bi bi-list-nested"></span> Recipe
                    </NavLink>
                </li>
                <!-- Authentication Links -->
                <AuthorizeView>
                    <Authorized>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="Account/Manage">
                                <span class="bi bi-person-fill"></span> @context.User.Identity?.Name
                            </NavLink>
                        </li>
                        <li class="nav-item">
                            <form action="Account/Logout" method="post" class="d-inline">
                                <AntiforgeryToken />
                                <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                                <button type="submit" class="btn nav-link">
                                    <span class="bi bi-arrow-bar-left"></span> Logout
                                </button>
                            </form>
                        </li>
                    </Authorized>
                    <NotAuthorized>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="Account/Register">
                                <span class="bi bi-person"></span> Register
                            </NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="Account/Login">
                                <span class="bi bi-person-badge"></span> Login
                            </NavLink>
                        </li>
                    </NotAuthorized>
                </AuthorizeView>
            </ul>
        </div>
    </div>
</nav>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

<style>
    /* General Navbar Styling */
    .navbar {
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .navbar-brand {
        font-size: 20px;
        font-weight: bold;
        color: white !important;
        margin-right: auto;
    }

    .navbar-nav .nav-link {
        color: white !important;
        font-size: 16px;
        font-weight: bold;
        text-decoration: none;
        padding: 0.75rem 1rem;
        display: flex;
        align-items: center;
        vertical-align: middle;
    }

        /* Active Link Styling */
        .navbar-nav .nav-link.active {
            background-color: transparent !important;
            border-bottom: 2px solid #1abc9c;
        }

    /* Spacing Between Items */
    .navbar-nav .nav-item {
        margin-right: 15px;
    }

    /* Icons Alignment */
    .navbar-nav .nav-link span {
        margin-right: 8px;
    }

    .navbar-nav .nav-link:hover {
        color: #1abc9c !important;
    }
</style>
